plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	jcenter()
}

bootRun {
	jvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"]
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web') {
		exclude module: 'spring-boot-starter-tomcat'
	}
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
//	implementation 'org.springframework.boot:spring-boot-starter-undertow'
	runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly('org.zalando:logbook-spring-boot-starter:1.13.0') {
		exclude module: 'logbook-httpclient'
		exclude group: 'org.springframework.security', module: 'spring-security-web'
	}

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	implementation("io.springfox:springfox-boot-starter:3.0.0")
}

test {
	useJUnitPlatform()
}