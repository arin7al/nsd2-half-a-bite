{"ast":null,"code":"export const getCookie = name => {\n  let matches = document.cookie.match(new RegExp(\"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"));\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n};\nexport const setCookie = (name, value, options = {}) => {\n  options = {\n    // domain: process.env.REACT_APP_API_DOMAIN,\n    path: '/',\n    ...options\n  };\n\n  if (options.expires instanceof Date) {\n    options.expires = options.expires.toUTCString();\n  }\n\n  let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\n\n  for (let optionKey in options) {\n    updatedCookie += \"; \" + optionKey;\n    let optionValue = options[optionKey];\n\n    if (optionValue !== true) {\n      updatedCookie += \"=\" + optionValue;\n    }\n  }\n\n  document.cookie = updatedCookie;\n};\nexport const deleteCookie = name => {\n  setCookie(name, \"\", {\n    'max-age': -1\n  });\n};","map":{"version":3,"sources":["/Users/martinlee/nsd 2/nsd2-half-a-bite/frontend/my-app/src/utils/cookieManager.js"],"names":["getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","deleteCookie"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAIC,IAAD,IAAU;AAC/B,MAAIC,OAAO,GAAGC,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,IAAIC,MAAJ,CAChC,aAAaL,IAAI,CAACM,OAAL,CAAa,8BAAb,EAA6C,MAA7C,CAAb,GAAoE,UADpC,CAAtB,CAAd;AAGA,SAAOL,OAAO,GAAGM,kBAAkB,CAACN,OAAO,CAAC,CAAD,CAAR,CAArB,GAAoCO,SAAlD;AACH,CALM;AAOP,OAAO,MAAMC,SAAS,GAAG,CAACT,IAAD,EAAOU,KAAP,EAAcC,OAAO,GAAG,EAAxB,KAA+B;AACpDA,EAAAA,OAAO,GAAG;AACN;AACAC,IAAAA,IAAI,EAAE,GAFA;AAGN,OAAGD;AAHG,GAAV;;AAMA,MAAIA,OAAO,CAACE,OAAR,YAA2BC,IAA/B,EAAqC;AACjCH,IAAAA,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACE,OAAR,CAAgBE,WAAhB,EAAlB;AACH;;AAED,MAAIC,aAAa,GAAGC,kBAAkB,CAACjB,IAAD,CAAlB,GAA2B,GAA3B,GAAiCiB,kBAAkB,CAACP,KAAD,CAAvE;;AAEA,OAAK,IAAIQ,SAAT,IAAsBP,OAAtB,EAA+B;AAC3BK,IAAAA,aAAa,IAAI,OAAOE,SAAxB;AACA,QAAIC,WAAW,GAAGR,OAAO,CAACO,SAAD,CAAzB;;AACA,QAAIC,WAAW,KAAK,IAApB,EAA0B;AACtBH,MAAAA,aAAa,IAAI,MAAMG,WAAvB;AACH;AACJ;;AAEDjB,EAAAA,QAAQ,CAACC,MAAT,GAAkBa,aAAlB;AACH,CAtBM;AAyBP,OAAO,MAAMI,YAAY,GAAIpB,IAAD,IAAU;AAClCS,EAAAA,SAAS,CAACT,IAAD,EAAO,EAAP,EAAW;AAChB,eAAW,CAAC;AADI,GAAX,CAAT;AAGH,CAJM","sourcesContent":["export const getCookie = (name) => {\n    let matches = document.cookie.match(new RegExp(\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n    ));\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nexport const setCookie = (name, value, options = {}) => {\n    options = {\n        // domain: process.env.REACT_APP_API_DOMAIN,\n        path: '/',\n        ...options\n    };\n\n    if (options.expires instanceof Date) {\n        options.expires = options.expires.toUTCString();\n    }\n\n    let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\n\n    for (let optionKey in options) {\n        updatedCookie += \"; \" + optionKey;\n        let optionValue = options[optionKey];\n        if (optionValue !== true) {\n            updatedCookie += \"=\" + optionValue;\n        }\n    }\n\n    document.cookie = updatedCookie;\n}\n\n\nexport const deleteCookie = (name) => {\n    setCookie(name, \"\", {\n        'max-age': -1\n    })\n}"]},"metadata":{},"sourceType":"module"}