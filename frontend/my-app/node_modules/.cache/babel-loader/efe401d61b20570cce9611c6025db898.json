{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport mainReducer from './reducers/main.reducer';\nimport IndexSagas from './sagas/index-sagas';\nconst rootReducer = combineReducers({\n  main: mainReducer,\n  investor: investorReducer\n}); // create the saga middleware\n\nconst sagaMiddleware = createSagaMiddleware(); // mount it on the Store\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware))); // then run the saga\n\nsagaMiddleware.run(IndexSagas);\nexport default store; // render the application","map":{"version":3,"sources":["/Users/martinlee/nsd 2/nsd2-half-a-bite/frontend/my-app/src/redux/store.ts"],"names":["createStore","applyMiddleware","combineReducers","createSagaMiddleware","composeWithDevTools","mainReducer","IndexSagas","rootReducer","main","investor","investorReducer","sagaMiddleware","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,MAAMC,WAAW,GAAGL,eAAe,CAAC;AAChCM,EAAAA,IAAI,EAAEH,WAD0B;AAEhCI,EAAAA,QAAQ,EAAEC;AAFsB,CAAD,CAAnC,C,CAKA;;AACA,MAAMC,cAAc,GAAGR,oBAAoB,EAA3C,C,CACA;;AACA,MAAMS,KAAK,GAAGZ,WAAW,CACrBO,WADqB,EACRH,mBAAmB,CAACH,eAAe,CAACU,cAAD,CAAhB,CADX,CAAzB,C,CAIA;;AACAA,cAAc,CAACE,GAAf,CAAmBP,UAAnB;AACA,eAAeM,KAAf,C,CAIA","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { combineReducers } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport mainReducer from './reducers/main.reducer'\n\nimport IndexSagas from './sagas/index-sagas';\n\nconst rootReducer = combineReducers({\n    main: mainReducer,\n    investor: investorReducer,\n\n})\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n// mount it on the Store\nconst store = createStore(\n    rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware))\n)\n\n// then run the saga\nsagaMiddleware.run(IndexSagas)\nexport default store;\nexport type RootState = ReturnType<typeof rootReducer>\n\n\n// render the application"]},"metadata":{},"sourceType":"module"}